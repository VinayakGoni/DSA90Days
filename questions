TCS

1. What are the Functional interfaces you have used?
2. How do you implement SSL in microservice?
3. What is CI/CD ? 
4. Which code coverage tools have you used?
5. Difference between map() and flatmap()?
6. What is the condition to implement a lambda expression?
7. What is a functional interface?
8. What is singleton class? How to create it?
9. How do you make a singleton object threadsafe?
10. How did you implement security in Springboot?
11. what are the advantages of Springboot?
12. What are the advantages of lambda expressions? and Functional interfaces?
13. Difference between Arralist and Linkedlist?
14. What is the default scope of a bean in Springboot?
15. What is the lifecycle of a maven project? (Validate, Compile, Test, Package, Integration test, Verify, Install and Deploy)

TR2:
1. collection vs collections?
2. How thread works? what happens if you run thread.run? and thread.start?
3. 


------------------------------------------------------------------------------------------

SpringML TR2 -- Gourab

Given an array of both positive and negative integers ‘arr1[]’ which are sorted. The task is to sort the square of the numbers of the Array into arr2[]. 
Make sure the solution works with linear time complexity

Examples: 

Input  : arr1[] = [-6, -5 , -3, 1 ,2 ,4]
Output : arr2[] = [1, 4, 9, 16, 25, 36]


------
Input  : arr1[] = [-6, -5 , -3, 1 ,2 ,4];
Output : arr2[] = [1, 4, 9, 16, 25, 36];
int len = arr1[].length;

int a = 0;
int b = len-1;


for(int i=1;i<=arr1.length;i++){

if(arr1[a] > arr1[b]){
arr2[b]=arr1[a]*arr1[a];
a++;
} else {
arr2[b-a] = arr1[b]*arr1[b];
b--;
}
}

1st itr
a=-6;b=4;i=1;n=6; arr2[5]=36;
a=

-------
Chat service : Web socket

https://app.diagrams.net/
------


// Online Java Compiler
// Use this editor to write, compile and run your Java code online
import java.util.*;
class HelloWorld {
    public static void main(String[] args) {
        //System.out.println("Hello, World!"); 
        int [] arr1 = {-6, -5 , -3, 1 ,2 ,4};
        int [] arr2 = new int [arr1.length];
        int len = arr1.length;

    int a = 0;
    int b = len-1;


for(int i=0;i<arr1.length;i++){

if(Math.abs(arr1[a]) > Math.abs(arr1[b])){
    System.out.println("Abs values" + Math.abs(arr1[a]) + " and : " + Math.abs(arr1[b]));
arr2[b]=arr1[a]*arr1[a];
a++;
} else {
arr2[b-a] = arr1[b]*arr1[b];
b--;
}
}
    System.out.println(Arrays.toString(arr2)); 
    System.out.println(arr2); 
        
    }
}

------------------------------------------------------------------------------------------

============================================================
Publisis sapient

tool: https://codeinterview.io/

1. Difference between wait and sleep?
2. What is rehashing?
3. How hashmap works internally?
4. What is the internal data structure of hashmap?
5. What are the data strucures you have used? queue,topic,stach,heap etc
6. When to use arraylist and when to use linkedlist?
7. What is immutable class? create one using a field List<Student>
8. Can HashMap contain null key?
9. What is executor framework?
10. What are solid design patterns?
11. What are the considerations to create a new class and to modify an existing class?
12. 


implemented immutable object:
public final class ImmutableObj {
  
  private final List<Student> studentList;
  private final Date dob;
  
  public ImmutableObj(List<Student> list, Date dob){
    List<Student> deepCopy = new ArrayList<Student>();
    deepcopy = deepCopy.addAll(list);
    
    this.studentList=deepCopy;
    this.dob=dob;
  }
  
  public List<Student> getStudentList(){
    return studentList;
  }
  
  public Date getDob(){
    return dob;
  }
  
}

String manipulation:

public static void main (String[] args) {
    String s = "abc";
    s = "efg";
    System.out.println(s);
    
    final StringBuffer sb = new StringBuffer("abc");
    sb.append("efg");
    System.out.println(sb);
	}


============================================================

=====================================================================
Net crackers:

public boolean equals(Object obj){


if(obj==instanceOf(Object){


}



}


student.clone();


class Employee {
	String name;
	
	// Getter and setter
}


// how to clone an object
Employee e1 = new Employee();

Employee e2 = e1.clone();

// clone method signature
public Object clone (){

return this.object;

}


CloneNotSupported 

interface Clonable


// Abhay, Saket, vivek
// Abhay, Saket, Vinayak, vivek

ArrayList<String> sortedList = new 

LinkedList<String> list = new LinkedList<String>(sortedList);

// Binary search
// Exceptions

-- Lambda

ArrayList<String> sortedList = new ArrayList<String>();

ArrayList<String> original = new ArrayList<>();

ArrayList<String> dup = new ArrayList<>();

HashSet<> hs = new HashSet<String>();

original.Stream(str -> Collections.));

stream map and flat map in java



Employee {
	id
	name
	managerId
	Salary
	deprtId
}

Deparment {
	deprtId
	departName
}


//query to fetch dept name and # of employees under the department

select d.departName, count(e.id) from Deparment d, Employee e where d.deprtId=e.deprtId;

//query to fetch department name and employee having max salary from that departmenr

select d.departName, e.salary from Deparment d, Employee e order by e.salary desc;


=====================================================================

resisilence 4j circuit breaker (to mitigate the failures)
microservice to microservice communication
API gateway and Authentication 
2 phase commit
SAGA pattern (eliminates the disadvantages of 2 phase commot)
commit phase and lock phase
SOLID design pattern
event based SAGS pattern

https://microservices.io/patterns/data/saga.html    

https://microservices.io/


==============================================================
Amadeus (Naveen)

1. WHat is dynamic method dispatch in java?
2. How to use a specific implementation of a class at run time?
3. Which annotation to use to inject a specific bean at run time (@Qualifier)
4. WAP to find the missing number.
5. find the midle element of a linkedlist?
6. How do you traverse a linkedlist?
7. 



==============================================================

Synecron -- TR2

1. Features/modules of spring MVC
2. How to habdle exception in Spring MVC architectire?
3. Have you used Spring MVC validations?
4. Spring annotations you have used?
5. Java 8 features?
6. What is method referencing in java?
7. How and why did you use stream API ?
8. distinguish between @Qualifier and @Primary
9. distinguish between composition and aggregation 
10. What is serializable interface? how do you use it?
11. What are all the design patterns have you used?
12. What is executor framework?
13. How do you break singleton design pattern?
14. What is front controller?
15. which one is good join vs sub query?
16. What are intermediate and terminal operations in java?
17. What are the features of Spring Boot?

==============================================================

Betsol

1. Difference between Unique key vs primary key
2. How do you get the values from a map using java 8 feature?
3. How to use stream to get the values of a Map?
4. What is Bifunction interface?
5. What is function interface?
6. what is serialversionuid in java ?
7. Is serialversionuid mandatory field?
8. What is is a and has a relationship in java?
9. What is Fly weight design pattern?
10. What is Chain of Responsibilty (COR) design pattern?
11. How do you break the singleton design pattern?
12. What is @enableautoconfiguration ?
13. What is @transactional annotation in spring boot?
14. What if you get NoSuchBeanDefinitionFound exception? and how do you resolve it?
15. WHat is unique constraint in hibernate?
16. get 
    a. you have to return the all the student objects
    b. you have return the student names with sorted order (ascending order)
   Using java 8 in below code? 

import java.util.*;
import java.lang.*;
import java.io.*;

class Eteki
{ 
	public static void main(String[]args)throws java.lang.Exception 
	{
			// your code goes here
      
      Map<String,List<Student>> studentMap  = new HashMap<>();

	studentMap.put("IT",Arrays.asList(new Student(1, "A"),new Student(2,"B"),new Student(3,"C")));
	studentMap.put("Mechanical",Arrays.asList(new Student(1, "X"),new Student(2,"Y"),new Student(3,"Z")));
	studentMap.put("ECS",Arrays.asList(new Student(1, "AB"),new Student(2,"CD"),new Student(3,"EF")));
      
                   
                   //1. you have to return the all the student objects
                   //2. you have return the student names with sorted order (ascending order)
     studentMap.forEach( (k,v) -> {
    System.out.println("Key is : " + k + " Value is : " +v);
       
    });
      
      List<Student> names = studentMap.entrySet().stream().filter(id -> id.getKey.equals("IT").map(Map.Entry::getValue);
      
      }
}
         
  class Student {
         
                   private int id;
                   private String name;
    public Student(int id, String name){
     this.id=id;
      this.name=name;
    }
    
                
                   
         }
         
         
17. What is predicate chaining?
18. What is ComponentScan(basePackage = {} ) ?
19. What is injectMocks? mock? spy? in junit?
20. How to get unique elements from the below dataset?
1 A 20
2 B 25
1 A 20
                                                                  
select distinct id,name from employee emp;

21. 

==============================================================

Betsol TR1

1. What is JWT ? how did you use it?
2. What is automatic dirty checking in hibernate ?
3. Is hibernate session thread safe?
4. What are the different modules of Hibernate?
5. Explain hibernate architecture?
6. What is the need of hibernate ?
7. What are the limitation of triggers in databse?
8. Advantages and Disadvantages of Indexes in SQL Server?
9. What is mutating table error?
10. difference between syntax error and runtime in sql?
11. orm vs jdbc ? 
12. What is transaction management in hibernate? does it support Programmatic vs. Declarative ?
13. What is constructor injection in spring?
14. What is inheritance in java?
15. What is optional class in java 8?
16. what is the difference between iterator() and split iterator()?
17. what are the benefits of Stream API in java 8?
18. What are lambda expressions?
19. Difference Between Streams and Collections in Java?
20. 

==============================================================

1. Using stream, sort the cities in different lists alphabetically

Texas
California
Virginia
Illinois
Connecticut
Delaware
Florida
Georgia
Arizona
Hawaii
Idaho
Tennessee
Arkansas
Utah
Vermont
Colorado


List 1
Arizona
Arkansas

List 2
California
Colorado
Connecticut

List 3
Delaware

List 4
Florida...



[3:20 PM] Lalit Chavan
    public class Overloaded {​
public static void foo(Integer i) {​
System.out.println("foo(Integer)");
}​

 public static void foo(short i) {​
System.out.println("foo(short)");
}​
 public static void foo(long i) {​
System.out.println("foo(long)");
}​
 public static void foo(int... i) {​
System.out.println("foo(int ...)");
}​
 public static void main(String[] args) {​
foo(10);
}​
}​




2. Which method will be executed?

[3:20 PM] Lalit Chavan
    public class Overloaded {​
public static void foo(Integer i) {​
System.out.println("foo(Integer)");
}​

 public static void foo(short i) {​
System.out.println("foo(short)");
}​
 public static void foo(long i) {​
System.out.println("foo(long)");
}​
 public static void foo(int... i) {​
System.out.println("foo(int ...)");
}​
 public static void main(String[] args) {​
foo(10);
}​
}​




3. Predict the output of the code


[3:23 PM] Lalit Chavan
    class Base {​
public void test() {​
}​
}​

class Base1 extends Base {​
public void test() {​
System.out.println("Base1");
}​
}​
class Base2 extends Base {​
public void test() {​
System.out.println("Base2");
}​
}​




[3:24 PM] Lalit Chavan
    class Test {​
public static void main(String[] args) {​
Base obj = new Base1();
((Base2) obj).test();
}​
}​



Crimsonlogic TR2
Existing application -
We have a Shopping Cart which includes below feature
1. Search and selecting the item
2. Calculate the amount to be collected and checkout page

New requirement to be implemented
1. To integrate with payment gateway
2. When pay button is clikced in checkout page , control will be redirected to payment gateway for amount collection
3. When amount is collected successfully by payment gateway , control will be redirected to application back then display the successfull message.

Task
1. High level table design and key information to be captured in system before redirecting to payment gateway
2. What is the possible failure scenario during payment and how to handle them

==============================================================



















